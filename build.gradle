ext{
	sourceDir = './app'
        testDir = './tests'
	homeDir = './build'
        lockFile='./composer.lock'
}

task prepare(type: Delete) {
	delete "${homeDir}/api"
        delete "${homeDir}/code-browser"
        delete "${homeDir}/coverage"
        delete "${homeDir}/logs"
        delete "${homeDir}/pdepend"
		doLast {
				file("${homeDir}/api").mkdirs()
                file("${homeDir}/code-browser").mkdirs()
				file("${homeDir}/coverage").mkdirs()	
				file("${homeDir}/logs").mkdirs()
				file("${homeDir}/pdepend").mkdirs()
        }
}
task phpmetrics (type : Exec, description : "Geenrating PHPMetrics"){
    executable name
		args "--report-xml=${homeDir}/logs/phpmetrics.xml", "--violations-xml=${homeDir}/logs/violations.xml", "--report-html=${homeDir}/logs/quality.html", sourceDir
}

task phpcb (type : Exec, description : "Create Code Browser."){
        ignoreExitValue true
        executable name
                args "--log", "${homeDir}/logs", "--source", "${sourceDir}", "--output", "${homeDir}/code-browser" 

}
task phpcpd (type : Exec, description : "Find duplicate code using PHPCPD and log result in XML format."){
        ignoreExitValue true
        executable name
                args "--log-pmd", "${homeDir}/logs/pmd-cpd.xml", sourceDir

}
task phpcs (type : Exec, description : "Find Coding Standard Violations using PHP_CodeSniffer"){
        ignoreExitValue true
    executable name
                args "--report=checkstyle", "--report-file=${homeDir}/logs/checkstyle.xml", "--standard=${homeDir}/phpcs.xml", sourceDir 
}
task phpmd (type : Exec, description : "Perform project mess detection using PHPMD, and Creating a log file for the Continuous Integration Server"){
        ignoreExitValue true
        executable name
                args sourceDir, "xml", "${homeDir}/phpmd.xml", "--reportfile", "${homeDir}/logs/pmd.xml"
}
task pdepend(type: Exec, description: 'Calculate software metrics using PHPDepend') {
        ignoreExitValue true
        executable name
                args "--jdepend-xml=${homeDir}/logs/jdepend.xml", "--jdepend-chart=${homeDir}/pdepend/dependencies.svg", "--overview-pyramid=${homeDir}/pdepend/overview-pyramid.svg", sourceDir
}
task phpdox (type : Exec, description : "Generating Docs enriched with pmd, checkstyle, phpcs,phpunit,phploc"){
        ignoreExitValue true
        executable name
                args "-f", "${homeDir}/phpdox.xml"
}
task phploc(type: Exec, description: 'Measure project size using PHPLOC') {
        ignoreExitValue true
        executable name
                args "--count-tests", "--log-csv", "${homeDir}/logs/phploc.csv", "--log-xml", "${homeDir}/logs/phploc.xml", sourceDir, testDir
}
task phpunit (type : Exec, description : "Run unit tests with PHPUnit"){
        ignoreExitValue true
         executable name
                args "-c", "./phpunit.xml", "--coverage-html", "${homeDir}/coverage", "--coverage-clover", "${homeDir}/logs/clover.xml", "--coverage-crap4j", "${homeDir}/logs/crap4j.xml", "--log-junit", "${homeDir}/logs/junit.xml", "--debug"
}
task composer_update (type : Exec, description : "Run composer update"){
        ignoreExitValue true
        executable 'composer'
                args "update"
}
task composer_install (type : Exec, description : "Run composer install"){
        ignoreExitValue true
        executable 'composer'
                args "install"
}

task composer_clean(type: Delete, description : "Clean composer.lock") {
        delete lockFile
}

task lint (description : "Perform Syntax Check using Lint"){
       ant.apply(executable:"php", failonerror: 'false') {
                arg(value:"-l")
                fileset(dir: sourceDir) {
                        include(name: "**/*.php")
                }
        }
}


task fullbuild (dependsOn: [prepare, lint, composer_clean, composer_install,composer_update, phpunit, phploc, phpdox, pdepend, phpmd, phpcs, phpcpd, phpcb,phpmetrics])
lint.mustRunAfter prepare
composer_clean.mustRunAfter lint
composer_install.mustRunAfter composer_clean
composer_update.mustRunAfter composer_install
phpunit.mustRunAfter composer_update
phploc.mustRunAfter phpunit
phpdox.mustRunAfter phploc
pdepend.mustRunAfter phpdox
phpmd.mustRunAfter pdepend
phpcs.mustRunAfter phpmd
phpcpd.mustRunAfter phpcs
phpcb.mustRunAfter phpcpd
phpmetrics.mustRunAfter phpcb
